<acronym>
	<name>dev</name>
	<equiv>device</equiv>
</acronym>

<acronym>
	<name>ver</name>
	<equiv>version</equiv>
</acronym>

<acronym>
	<name>ran</name>
	<equiv>range</equiv>
</acronym>

<acronym>
	<name>vec</name>
	<equiv>vector</equiv>
</acronym>

<acronym>
	<name>vp</name>
	<equiv>Viewport</equiv>
</acronym>

<acronym>
	<name>fam</name>
	<equiv>family</equiv>
</acronym>

<acronym>
	<name>que</name>
	<equiv>queue</equiv>
</acronym>

<acronym>
	<name>pipe</name>
	<equiv>pipeline</equiv>
</acronym>

<acronym>
	<name>ren</name>
	<equiv>render</equiv>
</acronym>

<acronym>
	<name>pass</name>
	<equiv>renderpass</equiv>
</acronym>

<acronym>
	<name>img</name>
	<equiv>image</equiv>
</acronym>



<acronym>
	<name>acr</name>
	<equiv>acronym</equiv>
</acronym>




<struct>
	<comment>A vkmod Device!</comment>
	<name>
		Dev
	</name>
	<derive>
		VkDevice
	</derive>
	<properties>
		<api>
			<member>
				<name>ver</name>
			</member>
		</api>
		<driver>
			<member>
				<name>ver</name>
			</member>
		</driver>
		<vendor>
			<member>
				<name>id</name>
			</member>
		</vendor>
		<member><name>id</name></member>
		<member><name>typ</name></member>
		<member><name>name</name></member>
		<member><name>limits</name></member>
		<pipe>
			<cache>
				<member><name>uuid</name></member>
			</cache>
		</pipe>
	</properties>
</struct>

<struct>
	<comment>1 2 or 3 component vector</comment>
	<name>
		Vec
	</name>
</struct>

<struct>
	<comment>A 1, 2 or 3 component range!</comment>
	<name>
		Ran
	</name>
</struct>

<struct>
	<comment>A vkmod Viewport!</comment>
	<name>
		VP
	</name>
	<member>
		<type>Vec</type>
		<name>pos</name>
	</member>
	<member>
		<type>Vec</type>
		<name>dim</type>
	</member>
	<member>
		<type>Ran</type>
		<name>depth</type>
	</member>
</struct>

<struct>
	<comment>A vkmod abstraction for buffer and images in a modern c++ container</comment>
	<name>Buf</name>
</struct>

<struct>
	<name>Shader</name>
</struct>

<struct>
	<name>Pool</name>
</struct>

<struct>
	<comment>vkmod pipeline</comment>
	<name>Pipe</name>
</struct>

<manager>
	<name>Fam</name>
	<child>Que</child>
	<child></child>
</manager>

<operation>
	<load>
	</load>
	<store>
	</store>
</operaton>
